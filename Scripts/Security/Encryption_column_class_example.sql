USE master;
GO

-- ==========================================
-- COLUMN ENCRYPTION
-- ==========================================

-- Create new login, user for the login, database and table
CREATE LOGIN [BankManagerLogin] WITH PASSWORD='Abcd1234.';
GO
CREATE DATABASE MiBanco;
GO
USE MiBanco;
GO
CREATE USER [BankManagerUser] FOR LOGIN BankManagerLogin;
GO

CREATE TABLE Customers
	(customer_id INT PRIMARY KEY,
	first_name VARCHAR(50) NOT NULL,
	last_name VARCHAR(50) NOT NULL,
	social_security_number VARBINARY(100) NOT NULL)
GO
-- grant permission for the user in the table
GRANT SELECT, INSERT, UPDATE, DELETE ON Customers TO BankManagerUser;
GO

-- create symmetric key for the user
CREATE SYMMETRIC KEY BankManager_User_Key
AUTHORIZATION BankManagerUser
WITH ALGORITHM=AES_256
ENCRYPTION BY PASSWORD='abcd1234.'
GO

-- impersonation with the created user
EXECUTE AS USER='BankManagerUser';
GO

SELECT USER;
go
--BankManagerUser MUST OPEN THE KEY TO USE IT
OPEN SYMMETRIC KEY BankManager_User_Key DECRYPTION BY PASSWORD='abcd1234.'
GO

SELECT COUNT(*) FROM Customers;
-- 0

-- INSERT FIRTS VALUES WITH A COLUMN ENCRYPTED
INSERT INTO Customers VALUES (1,'HOWARD', 'STERN',
	ENCRYPTBYKEY(KEY_GUID('BankManager_User_Key'),'042-32-1234'));

INSERT INTO Customers VALUES (2,'Donald', 'Trump',
	ENCRYPTBYKEY(KEY_GUID('BankManager_User_Key'),'035-24-321'));

INSERT INTO Customers VALUES (3,'Bill', 'Gates',
	ENCRYPTBYKEY(KEY_GUID('BankManager_User_Key'),'533-13-8965'));
GO

--(1 row affected)
--(1 row affected)
--(1 row affected)
SELECT COUNT(*) FROM Customers;
-- 3
SELECT * FROM Customers;

/* rESULT: we have this data in the table WITH LAST COLUMN ENCRYPTED
customer_id	first_name	last_name	social_security_number
-----------	----------	---------	----------------------
1			HOWARD		STERN		0x003C289144BEA644A575CCEE7102E58A0200000091DEA64C739A5DACA67900C5575416A6B1180E29B32CAD4827E39901BED359B8CE9B5782DCACC1F8169C7EC061CAE3D9
2			Donald		Trump		0x003C289144BEA644A575CCEE7102E58A02000000FDC0D15128BDAAC50A87BB5301BB872FF9FF94A55BF94FBC955CE3B2B7011A83723F65FB3F7ECBD42A39F077BA716181
3			Bill		Gates		0x003C289144BEA644A575CCEE7102E58A02000000B6F109C90E2C0DEC33882DCF95242668B9C397C2672830106A45B4EE087852F53E303A4425B476F88BE791DAA54F843E
*/
-- AFTER THIS PROCESS WE CLOSE THE KEY...
CLOSE ALL SYMMETRIC KEYS;
GO


-- =====================================
--     WE WANT TO DECRYPT AFTERWARDS 
-- =====================================
-- I AM NOW BankManagerUser! I MUST OPEN THE KEY AGAIN TO USE IT
OPEN SYMMETRIC KEY BankManager_User_Key DECRYPTION BY PASSWORD='abcd1234.'
GO

SELECT customer_id AS 'Id', first_name+' '+last_name AS 'Nombre cliente',
	CONVERT(VARCHAR, DECRYPTBYKEY(social_security_number)) as 'Número de la Seguridad social' FROM Customers;
GO

/* Resultado: la columna está desencriptada!

Id		Nombre cliente		Número de la Seguridad social
--		--------------		-----------------------------
1		HOWARD STERN		042-32-1234
2		Donald Trump		035-24-321
3		Bill Gates			533-13-8965
*/
-- DON'T FORGET!!!
REVERT;
GO
-- =========================================================
--		COLUMN ENCRYPTION with certificate (more portection)
-- =========================================================
-- TYPES:
-- * Self signed certificates
-- * Buy it to a CA (certificate authority)

-- If we already have a master key we need to drop it
USE master;
GO

-- this master key should be created on the database to use...
CREATE MASTER KEY ENCRYPTION BY PASSWORD='Abcd1234.';
GO

SELECT name KeyName,
	symmetric_key_id KeyId,
	key_length,
	algorithm_desc KeyDesc
FROM sys.symmetric_keys;
GO

--KeyName						KeyId	key_length	KeyDesc
--##MS_DatabaseMasterKey##		101		256			AES_256
--##MS_ServiceMasterKey##		102		256			AES_256


USE AdventureWorks2017;
GO

SELECT * FROM Sales.CreditCard;

SELECT * 
	INTO Sales.TarjetaDeCredito
	FROM Sales.CreditCard;
GO

--(19118 rows affected)

CREATE CERTIFICATE Cert_April_2021
	WITH SUBJECT = 'Customer Credit Card Number';
GO

-- create symmetric key for the certificate
CREATE SYMMETRIC KEY SK_CreditCards_April_2021
	WITH ALGORITHM=AES_256
	ENCRYPTION BY CERTIFICATE Cert_April_2021;
GO

Use AdventureWorks2017;
ALTER TABLE Sales.TarjetaDeCredito 
	ADD CardNumber_Encrypted varbinary(128);
GO

SELECT TOP 10 CardNumber, CardNumber_Encrypted 
	FROM Sales.TarjetaDeCredito
GO

--CardNumber		CardNumber_Encrypted
--33332664695310	NULL
--55552127249722	NULL
--77778344838353	NULL
--77774915718248	NULL
--11114404600042	NULL
--55557132036181	NULL
--55553635401028	NULL
--33336081193101	NULL
--55553465625901	NULL
--33332126386493	NULL

-- open the key
OPEN SYMMETRIC KEY SK_CreditCards_April_2021 DECRYPTION  BY CERTIFICATE Cert_April_2021;
GO

Update Sales.TarjetaDeCredito
	 SET CardNumber_Encrypted = ENCRYPTBYKEY( KEY_GUID('SK_CreditCards_April_2021'),CardNumber, 1 ,
	HASHBYTES('SHA2_256', CONVERT(varbinary, creditcardID)));
GO

--(19118 rows affected)

SELECT TOP 10 CardNumber, CardNumber_Encrypted 
	FROM Sales.TarjetaDeCredito
GO

--CardNumber	CardNumber_Encrypted
--33332664695310	0x00C7C874AC793E4096A1C71EB75B5B9A02000000508CE34835BD5E4037F9A587607B56731CD41A7F9CB5295B1202B293695507108CCD408F7C2B8B9A294F3B1C87E7525E47A1EF41768E20F84CA5073D97EE8FADAA8EF7189B72F738A19BA76358FD832A
--55552127249722	0x00C7C874AC793E4096A1C71EB75B5B9A02000000840FB77F69DC9B93F02A60FB1E1E6F77E98E247AA85496F82A13FDC165E1486C885295BE284189498A768B6031292CAB6464421425D3D2B36E6158430EAE00C138FC25B71C4F705FEC6684A2BB78995E
--77778344838353	0x00C7C874AC793E4096A1C71EB75B5B9A02000000E3D874FEA9DD34D42A4D1C6B3B3894B06E88B6231A2F91327D94A56FFE28C1D4D57C5E2BAA924103348CB1AC3971DAD067383E9A303E59F967FEB8AEEA20D1381CE62FB95F01AE8C3EE5838CC0D1356F
--77774915718248	0x00C7C874AC793E4096A1C71EB75B5B9A02000000CA27E8657019E729DB63D05F008A2CE8323A3FAE0992776908551BA4AC4C39490DCAEFDF02923AF3A44A3D09F4583ECB490097DF1C7E41C3EF3ADDFEC710EE033D08C1E55CFF05EC29EA86D712C937B9
--11114404600042	0x00C7C874AC793E4096A1C71EB75B5B9A02000000484E13E344E2AC775BB62A14F9811C5E4423C0D02B8C794A01AB92895680E6B7F5FBD5590461887BFBE66B3231F941B4CF9560C66C833F8C97722313E0BA96994B9CFA911288C7821A39C25216647739
--55557132036181	0x00C7C874AC793E4096A1C71EB75B5B9A020000005E9E87B9F75FA892724C96879C0115DE8D4E9B60931C399868E17A0E1278E2DECCABDD8B78B5233586398A5BF5C43AB7B8DD04D246E0570E2AAA28A0ADFF5EBCBC24E912DA46FA638D3B8D0C40EB3BA3
--55553635401028	0x00C7C874AC793E4096A1C71EB75B5B9A020000002262B5EA4D14C2D5BC0783BCE8F537DB4D05619AAD7028C1F8036BB5598A57F786FA4CD6B7227C2B4DBA101CAFED16A7620963B5DF10A303B000538465A3C5886722BBA8106EA40FAD9DCD25C8ABE339
--33336081193101	0x00C7C874AC793E4096A1C71EB75B5B9A020000007FAD980BB10A7FEB0D79DB96187BAA0BAE3CC026BF1FBFAC032811E378F101F6950E416CB322C0BB9F595995ECCA040047E0A83C707C1CCE6C56CDA2DA1B10C409BDAFB91A832DB16F109A9D111E817D
--55553465625901	0x00C7C874AC793E4096A1C71EB75B5B9A02000000DD37300E9AD28DF42D6B59A5E0EC3122A044C79719BB465327C09015FFFD51D445DB2EC14F00C8A5A1A6268BB36CC9F2F9E141A4D7D080BFBDC31DDAB6C0D2D84C015732554248BD4C2123D9242DCE88
--33332126386493	0x00C7C874AC793E4096A1C71EB75B5B9A02000000941DEFE72A082878056DE35E3EF07D43FAFBEA8AD1D8A539E97057772D7B094ADE944ABD5BCDF9E95F053DBB72D6FB87BE97603008F11D523F4610A5B084BA22D35FD5449E82A02137D7FDFF3EC024A8

--===========================================================================================
-- 2021 / 04 / 13 ---------------------------------------------------------
USe MASTER
GO

CREATE LOGIN Doctor1 WITH PASSWORD='Abcd1234.';
GO
CREATE LOGIN Doctor2 WITH PASSWORD='Abcd1234.';
GO

-- =========================
-- Drop Database Template
-- =========================
USE master
GO

IF  EXISTS (
	SELECT name 
		FROM sys.databases 
		WHERE name = N'HospitalDb'
)
DROP DATABASE HospitalDb
GO

CREATE DATABASE HospitalDb;
GO
USE HospitalDb;
GO
Drop USER IF EXISTS Doctor1;
Drop USER IF EXISTS Doctor2;
CREATE USER Doctor1 FOR LOGIN Doctor1;
GO
CREATE USER Doctor2 FOR LOGIN Doctor2;
GO

DROP TABLE IF EXISTS PatientData
GO

CREATE TABLE PatientData
	(id INT PRIMARY KEY,
	name NVARCHAR(30), --unicode: un caracter dos bytes
	doctorname VARCHAR(25),
	uid VARBINARY(1000),
	symptom VARBINARY(4000))
GO
-- grant permission for the user in the table
GRANT SELECT, INSERT ON PatientData TO Doctor1,Doctor2;
GO


-- creat master key
DROP MASTER KEY
GO
--Msg 15151, Level 16, State 1, Line 248
--Cannot find the symmetric key 'master key', because it does not exist or you do not have permission.

-- this master key should be created on the database to use...
CREATE MASTER KEY ENCRYPTION BY PASSWORD='Abcd1234.';
GO

SELECT 
	name Keyname, symmetric_key_id KeyID, key_length KeyLength, algorithm_desc KeyAlgorithm
 FROM sys.symmetric_keys;
GO

-- aparece en master> security> symmetric keys  peor n en la BBDD de HospitalDb
--Keyname						KeyID	KeyLength	KeyAlgorithm
--##MS_DatabaseMasterKey##	101		256			AES_256

--name	principal_id	symmetric_key_id	key_length	key_algorithm	algorithm_desc	create_date	modify_date	key_guid	key_thumbprint	provider_type	cryptographic_provider_guid	cryptographic_provider_algid
--##MS_DatabaseMasterKey##	1	101	256	A3	AES_256	2021-04-13 21:22:12.607	2021-04-13 21:22:12.607	AA49CF00-E6BB-4ACD-A72E-05E0FBD0CC45	NULL	NULL	NULL	NULL

-- self signed certificates

CREATE CERTIFICATE Doctor1cert AUTHORIZATION Doctor1
	WITH SUBJECT = 'Abcd1234.', start_date = '01/01/2021';
GO
CREATE CERTIFICATE Doctor2cert AUTHORIZATION Doctor2
	WITH SUBJECT = 'Abcd1234.', start_date = '01/01/2021';
GO

SELECt * FROM sys.certificates;
GO

--name	certificate_id	principal_id	pvt_key_encryption_type	pvt_key_encryption_type_desc	is_active_for_begin_dialog	issuer_name	cert_serial_number	sid	string_sid	subject	expiry_date	start_date	thumbprint	attested_by	pvt_key_last_backup_date	key_length
--Doctor1cert	256	5	MK	ENCRYPTED_BY_MASTER_KEY	1	Abcd1234.	62 df 7d 8c d9 cc 1c b6 4a d7 15 9e 05 15 b5 f8	0x0106000000000009010000001632587ACBC89C5576FDA8F3C624921702D8C99A	S-1-9-1-2052600342-1436338379-4087938422-395453638-2596919298	Abcd1234.	2022-01-01 00:00:00.000	2021-01-01 00:00:00.000	0x1632587ACBC89C5576FDA8F3C624921702D8C99A	NULL	NULL	2048
--Doctor2cert	257	6	MK	ENCRYPTED_BY_MASTER_KEY	1	Abcd1234.	6a 55 ff ce 28 58 f9 ad 47 6e 6a 94 b2 dd 09 e4	0x0106000000000009010000009EC30D72D81FAE1281497A60ECEF59943A5E3729	S-1-9-1-1913504670-313401304-1618626945-2488922092-691494458	Abcd1234.	2022-01-01 00:00:00.000	2021-01-01 00:00:00.000	0x9EC30D72D81FAE1281497A60ECEF59943A5E3729	NULL	NULL	2048

-- claves simétricas para cada doctor para proteger los certificados
CREATE SYMMETRIC KEY doctor1key
	WITH ALGORITHM=AES_256
	ENCRYPTION BY CERTIFICATE Doctor1cert;
GO

CREATE SYMMETRIC KEY doctor2key
	WITH ALGORITHM=AES_256
	ENCRYPTION BY CERTIFICATE Doctor2cert;
GO

SELECT * FROM SYS.symmetric_keys;
GO

--name	principal_id	symmetric_key_id	key_length	key_algorithm	algorithm_desc	create_date	modify_date	key_guid	key_thumbprint	provider_type	cryptographic_provider_guid	cryptographic_provider_algid
--##MS_DatabaseMasterKey##	1	101	256	A3	AES_256	2021-04-13 21:25:14.190	2021-04-13 21:25:14.190	C5DC3800-52BC-4577-B47A-DBB390CDD5C4	NULL	NULL	NULL	NULL
--doctor1key	1	256	256	A3	AES_256	2021-04-13 21:34:08.597	2021-04-13 21:34:08.597	36B1FF00-98ED-4729-82F0-6B3D3ADED0C5	NULL	NULL	NULL	NULL
--doctor2key	1	257	256	A3	AES_256	2021-04-13 21:34:08.603	2021-04-13 21:34:08.603	33F53E00-FE94-4789-A575-BAD1962B6CAF	NULL	NULL	NULL	NULL


GRANT VIEW DEFINITION ON CERTIFICATE::doctor1cert TO Doctor1
GO
--Cannot grant, deny, or revoke permissions to sa, dbo, entity owner, information_schema, sys, or yourself.
GRANT VIEW DEFINITION ON SYMMETRIC KEY::doctor1key TO Doctor1
GO

GRANT VIEW DEFINITION ON CERTIFICATE::doctor2cert TO Doctor2
GO
--Cannot grant, deny, or revoke permissions to sa, dbo, entity owner, information_schema, sys, or yourself.
GRANT VIEW DEFINITION ON SYMMETRIC KEY::doctor2key TO Doctor2
GO
--Commands completed successfully.

--La otra opcion es grant control, mas heavy
--GRANT CONTROL ON CERTIFICATE::doctor1cert TO Doctor1
--GRANT CONTROL DEFINITION ON SYMMETRIC KEY::doctor1key TO Doctor1
--GO

-- impersono a doctor1
EXECUTE AS USER = 'Doctor1';
PRINT USER
GO

OPEN SYMMETRIC KEY doctor1key
	DECRYPTION BY CERTIFICATE doctor1cert
GO

INSERT INTO PatientData
VALUES (1,
'Jack',
'Doctor1',
ENCRYPTBYKEY(KEY_GUID('doctor1key'),'11111111'),
ENCRYPTBYKEY(KEY_GUID('doctor1key'),'Cut')
)
--(1 row affected)
INSERT INTO PatientData
VALUES (2,
'Jane',
'Doctor1',
ENCRYPTBYKEY(KEY_GUID('doctor1key'),'222222'),
ENCRYPTBYKEY(KEY_GUID('doctor1key'),'Sore Leg')
)
--(1 row affected)
INSERT INTO PatientData
VALUES (3,
'John Doe',
'Doctor1',
ENCRYPTBYKEY(KEY_GUID('doctor1key'),'3333333'),
ENCRYPTBYKEY(KEY_GUID('doctor1key'),'Headache')
)
Select * from PatientData;
GO

--id	name		doctorname	uid																																			symptom
--1		Jack		Doctor1		0x00FFB136ED98294782F06B3D3ADED0C502000000401F49F0B35DCE0F8BA1E61C120AB4029C41C92A2945089BB58FA5E22A63E53DA47ECF7AE86343BAEB0CAE4ED8A8334A	0x00FFB136ED98294782F06B3D3ADED0C502000000E3880651E4AD9416E4561DF798CE6FAF55B3430726CBFF088E1148A0CA6B9EE5
--2		Jane		Doctor1		0x00FFB136ED98294782F06B3D3ADED0C502000000F22A916D88BA7E1FB7A994D332B4B73BBB200A149017FBC3122F9E2C86711CF8									0x00FFB136ED98294782F06B3D3ADED0C502000000D03CB3A0C68B626E57DC7EA0F4A750F2BF3545B42180391E90022E86B76AC0F925B7D4888ED65987DC849C331BCC8ADD
--3		John Doe	Doctor1		0x00FFB136ED98294782F06B3D3ADED0C5020000007D197C9F158D89635A7380C89D1141A5C8803235BF6FC77E5B7755049DEE31D2									0x00FFB136ED98294782F06B3D3ADED0C50200000058B4C52B0BCF4B0E0EC9573BBE2FA9ED406C9B66CE1EBDB4D67984A5154C6EC686243A572CEA780BFB38F1FB7B9767C9

CLOSE ALL SYMMETRIC KEYS;
GO

REVERT
GO

-- impersono a doctor2
EXECUTE AS USER = 'Doctor2';
PRINT USER
GO

OPEN SYMMETRIC KEY doctor2key
	DECRYPTION BY CERTIFICATE doctor2cert
GO

INSERT INTO PatientData
VALUES (4,
'Mary',
'Doctor2',
ENCRYPTBYKEY(KEY_GUID('doctor2key'),'44444'),
ENCRYPTBYKEY(KEY_GUID('doctor2key'),'Cut in arm')
)
--(1 row affected)
INSERT INTO PatientData
VALUES (5,
'Ana',
'Doctor2',
ENCRYPTBYKEY(KEY_GUID('doctor2key'),'5555'),
ENCRYPTBYKEY(KEY_GUID('doctor2key'),'Sore nose')
)
--(1 row affected)
INSERT INTO PatientData
VALUES (6,
'Angelica',
'Doctor2',
ENCRYPTBYKEY(KEY_GUID('doctor2key'),'66666'),
ENCRYPTBYKEY(KEY_GUID('doctor2key'),'Cough')
)
Select * from PatientData;
GO

--id	name		doctorname	uid	symptom
--1		Jack		Doctor1		0x00FFB136ED98294782F06B3D3ADED0C502000000401F49F0B35DCE0F8BA1E61C120AB4029C41C92A2945089BB58FA5E22A63E53DA47ECF7AE86343BAEB0CAE4ED8A8334A	0x00FFB136ED98294782F06B3D3ADED0C502000000E3880651E4AD9416E4561DF798CE6FAF55B3430726CBFF088E1148A0CA6B9EE5
--2		Jane		Doctor1		0x00FFB136ED98294782F06B3D3ADED0C502000000F22A916D88BA7E1FB7A994D332B4B73BBB200A149017FBC3122F9E2C86711CF8	0x00FFB136ED98294782F06B3D3ADED0C502000000D03CB3A0C68B626E57DC7EA0F4A750F2BF3545B42180391E90022E86B76AC0F925B7D4888ED65987DC849C331BCC8ADD
--3		John Doe	Doctor1		0x00FFB136ED98294782F06B3D3ADED0C5020000007D197C9F158D89635A7380C89D1141A5C8803235BF6FC77E5B7755049DEE31D2	0x00FFB136ED98294782F06B3D3ADED0C50200000058B4C52B0BCF4B0E0EC9573BBE2FA9ED406C9B66CE1EBDB4D67984A5154C6EC686243A572CEA780BFB38F1FB7B9767C9
--4		Mary		Doctor2		0x003EF53394FE8947A575BAD1962B6CAF02000000CF9E026A03E13F3942D0653F595A7EB341299E4EBB33B9659220818F674EEB9C	0x003EF53394FE8947A575BAD1962B6CAF02000000D16DC6425E7B63A547E537CAA1BFEC37F37349F06DFCD9BB40D65CBB066C7F2D5D20CDC50E246960C56AED5351A3F60E
--5		Ana			Doctor2		0x003EF53394FE8947A575BAD1962B6CAF02000000E57AF817A7BB74598A171E382EA6E457AB16036555B835E009E1D8F8EBF4A935	0x003EF53394FE8947A575BAD1962B6CAF0200000001EAE1910927092A9E47D109ADB4BC981529ED48C9521BFBD217CEC7F07B8C3677BFF8EEA5E3F480D982556ACE15152C
--6		Angelica	Doctor2		0x003EF53394FE8947A575BAD1962B6CAF02000000D32FE2A5BA638BB5428B1B56BCC6C8F9C574F21C9098945E3E5F8532C74CF589	0x003EF53394FE8947A575BAD1962B6CAF02000000A9FE6668BDBC934833DB833FE8CEB37B389B7DD622E0677617C367464DF8CB85


CLOSE ALL SYMMETRIC KEYS;
GO

REVERT
GO

PRINT USER;
GO
--dbo

-- impersono a doctor1 para ver
EXECUTE AS USER = 'Doctor1';
PRINT USER
GO

OPEN SYMMETRIC KEY doctor1key
	DECRYPTION BY CERTIFICATE doctor1cert
GO

-- ahora uso otra funcion para desencripotar la selección

SELECT [id]
      ,[name]
      ,[doctorname]
      ,CONVERT(VARCHAR, DecryptByKey(uid)) as UID
      ,CONVERT(VARCHAR, DecryptByKey(symptom)) as Sintomas
  FROM [dbo].[PatientData]
GO
-- solo ve los del doctor 1
--id		name		doctorname	UID			Sintomas
--1			Jack		Doctor1		11111111	Cut
--2			Jane		Doctor1		222222		Sore Leg
--3			John Doe	Doctor1		3333333		Headache
--4			Mary		Doctor2		NULL		NULL
--5			Ana			Doctor2		NULL		NULL
--6			Angelica	Doctor2		NULL		NULL
CLOSE ALL SYMMETRIC KEYS;
REVERT
GO
-- impersono a doctor2 para ver
EXECUTE AS USER = 'Doctor2';
PRINT USER
OPEN SYMMETRIC KEY doctor2key
	DECRYPTION BY CERTIFICATE doctor2cert
GO

-- ahora uso otra funcion para desencripotar la selección

SELECT [id]
      ,[name]
      ,[doctorname]
      ,CONVERT(VARCHAR, DecryptByKey(uid)) as UID
      ,CONVERT(VARCHAR, DecryptByKey(symptom)) as Sintomas
  FROM [dbo].[PatientData]
GO
-- solo ve los del doctor 2
--id	name		doctorname	UID		Sintomas
--1		Jack		Doctor1		NULL	NULL
--2		Jane		Doctor1		NULL	NULL
--3		John Doe	Doctor1		NULL	NULL
--4		Mary		Doctor2		44444	Cut in arm
--5		Ana			Doctor2		5555	Sore nose
--6		Angelica	Doctor2		66666	Cough

CLOSE ALL SYMMETRIC KEYS;
REVERT
GO

-- borranmos el certificado como DBO
DROP CERTIFICATE [doctor2cert];
GO
-- no va porqeu debemos borrar primero la clave
--Msg 15352, Level 16, State 1, Line 482
--The certificate cannot be dropped because one or more entities are either signed or encrypted using it.

DROP SYMMETRIC KEY  [doctor2key];
GO
DROP CERTIFICATE [doctor2cert];
GO
--Commands completed successfully.

--===================================
-- impersono a doctor2 para ver si ahora puedo select
EXECUTE AS USER = 'Doctor2';
PRINT USER
OPEN SYMMETRIC KEY doctor2key
	DECRYPTION BY CERTIFICATE doctor2cert
GO
--Doctor2
--Msg 15151, Level 16, State 1, Line 498
--Cannot find the symmetric key 'doctor2key', because it does not exist or you do not have permission.


-- ahora uso otra funcion para desencripotar la selección

SELECT [id]
      ,[name]
      ,[doctorname]
      ,CONVERT(VARCHAR, DecryptByKey(uid)) as UID
      ,CONVERT(VARCHAR, DecryptByKey(symptom)) as Sintomas
  FROM [dbo].[PatientData]
GO
--id	name		doctorname	UID		Sintomas
--1		Jack		Doctor1		NULL	NULL
--2		Jane		Doctor1		NULL	NULL
--3		John Doe	Doctor1		NULL	NULL
--4		Mary		Doctor2		NULL	NULL
--5		Ana			Doctor2		NULL	NULL
--6		Angelica	Doctor2		NULL	NULL

REVERT;
GO

Use MASTER
GO