-- Generated by Oracle SQL Developer Data Modeler 20.3.0.283.0710
--   at:        2021-01-26 20:26:54 CET
--   site:      SQL Server 2012
--   type:      SQL Server 2012
--RAISERROR ('---------- PARO EL SCRIPT al INICIO EN caso de ejecuciï¿½n por error ----------', 20, -1) WITH LOG;
--GO --to avoid executing script while editing

USE [containers_ppd_test];
GO
-- Generated by Oracle SQL Developer Data Modeler 20.3.0.283.0710
--   at:        2021-01-26 21:13:19 CET
--   site:      SQL Server 2012
--   type:      SQL Server 2012



CREATE TABLE Mgmt.calendario_eventos_ppd
    (
     id_evento INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     tipo VARCHAR (100) NOT NULL ,
     desc_evento TEXT ,
     fecha_prevista DATE ,
     hora_prevista TIME ,
     contenedor_ppd_id_contenedor INTEGER NOT NULL
    );
GO


CREATE TABLE Mgmt.cliente_ppd
    (
     id_cliente INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     nombre VARCHAR (80) ,
     direccion_ppd_id_direccion INTEGER NOT NULL
    );
GO


CREATE TABLE Mgmt.concepto_presupuesto_ppd
    (
     id_concepto INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     nombre VARCHAR (100) ,
     descripcion_concepto VARCHAR (100) ,
     precio_uni FLOAT (2) ,
     precio_total FLOAT (2) ,
     presupuesto_ppd_id_presupuesto INTEGER NOT NULL ,
     presupuesto_ppd_requiere_cliente INTEGER NOT NULL
    );
GO


CREATE TABLE Mgmt.contacto_ppd
    (
     id_contacto INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     tipo VARCHAR (80) NOT NULL ,
     dato VARCHAR (100) NOT NULL
    );
GO


CREATE TABLE contactos_cliente
    (
     cliente_ppd_id_cliente INTEGER NOT NULL ,
     contacto_ppd_id_contacto INTEGER NOT NULL ,
     id_contacto_cliente INTEGER NOT NULL
    );
GO


CREATE TABLE contactos_navieras
    (
     id_contacto INTEGER NOT NULL ,
     id_naviera INTEGER NOT NULL
    );
GO

CREATE TABLE Mgmt.contenedor_ppd
    (
     id_contenedor INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     nserie VARCHAR (20) NOT NULL ,
     digitoctrl VARCHAR (20) NOT NULL ,
     modelo_cont_ppd_id_modelo INTEGER NOT NULL ,
     estado_cont_ppd_id_estado INTEGER NOT NULL
    );
GO


CREATE TABLE Mgmt.dimension_ppd
    (
     id_dimension INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     dim_desc VARCHAR (150) ,
     ancho FLOAT (2) ,
     longitud FLOAT (2) ,
     altura FLOAT (2) ,
     volumen FLOAT (2)
    );
GO

CREATE TABLE Mgmt.direccion_ppd
    (
     id_direccion INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     via VARCHAR (80) ,
     calle VARCHAR (80) ,
     calle2 VARCHAR (80) ,
     CP VARCHAR (10) ,
     ciudad VARCHAR (80) ,
     provincia VARCHAR (80) ,
     pais VARCHAR (80)
    );
GO

CREATE TABLE Mgmt.empleado_ppd
    (
     id_empleado INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     nif VARCHAR (10) NOT NULL ,
     nombre VARCHAR (50) NOT NULL ,
     apellido1 VARCHAR (50) NOT NULL ,
     apellido2 VARCHAR (50) NOT NULL ,
     puesto VARCHAR (100) ,
     oficina_ppd_id_oficina INTEGER NOT NULL
    );
GO


CREATE TABLE Mgmt.estado_cont_ppd
    (
     id_estado INTEGER IDENTITY(1,1) NOT NULL PRIMARY KEY ,
     peso_neto FLOAT (2) ,
     desc_estado TEXT
    );
GO


CREATE TABLE Mgmt.factura_ppd
    (
     id_factura INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     fecha DATE ,
     importe FLOAT (2) ,
     impuestos FLOAT (2) ,
     info_extra TEXT ,
     presupuesto_ppd_id_presupuesto INTEGER NOT NULL ,
     presupuesto_ppd_cliente_ppd_id_cliente INTEGER NOT NULL
    );
GO


CREATE TABLE Sales.medio_transporte_ppd
    (
     id_mediot INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     matricula VARCHAR (80) NOT NULL ,
     tipo VARCHAR (80) NOT NULL ,
     modelo_cont_ppd_id_modelo INTEGER NOT NULL ,
     transportista_ppd_id_trans INTEGER NOT NULL ,
     tarifa_ppd_id_tarifa INTEGER NOT NULL
    );
GO


CREATE TABLE modelo_cont_ppd
    (
     id_modelo INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     modelo VARCHAR (80) NOT NULL ,
     carga_max FLOAT (2) ,
     mgw FLOAT (2) ,
     tara FLOAT (2) ,
     imagen VARBINARY (MAX) ,
     dimension_ppd_id_dimension INTEGER NOT NULL ,
     dimension_ppd_id_dimension2 INTEGER NOT NULL ,
     dimension_ppd_id_dimension3 INTEGER NOT NULL
    );
GO



CREATE TABLE Import.naviera_ppd
    (
     id_naviera INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     nombre_naviera VARCHAR (80) NOT NULL ,
     direccion_ppd_id_direccion INTEGER NOT NULL ,
     puerto_ppd_id_puerto INTEGER NOT NULL
    );
GO



CREATE TABLE Import.oficina_ppd
    (
     id_oficina INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     nombre VARCHAR (100) NOT NULL ,
     direccion_ppd_id_direccion INTEGER NOT NULL ,
     empleado_ppd_id_empleado INTEGER NOT NULL
    );
GO

CREATE TABLE Sales.orden_trabajo_ppd
    (
     id_orden INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     descripcion_orden VARCHAR (80) NOT NULL ,
     inicio DATETIME ,
     fin DATETIME ,
     medio_transporte_ppd_id_mediot INTEGER NOT NULL
    );
GO

CREATE TABLE Mgmt.presupuesto_ppd
    (
     id_presupuesto INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     fecha DATE ,
     notas TEXT ,
     cliente_ppd_id_cliente INTEGER NOT NULL
    );
GO



CREATE TABLE Import.puerto_ppd
    (
     id_puerto INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     codigo VARCHAR (15) NOT NULL ,
     latitud FLOAT ,
     longitud FLOAT ,
     hora_utc VARCHAR (10) ,
     direccion_ppd_id_direccion INTEGER NOT NULL
    );
GO


CREATE TABLE Mgmt.stock_ppd
    (
     id_stock INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     cantidad INTEGER NOT NULL ,
     modelo_cont_ppd_id_modelo INTEGER NOT NULL
    );
GO


CREATE TABLE Sales.tarifa_ppd
    (
     id_tarifa INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     desc_tarifa VARCHAR (80) NOT NULL ,
     precio_dia FLOAT ,
     nombre_tarifa VARCHAR (80) NOT NULL
    );
GO


CREATE TABLE Sales.transportista_ppd
    (
     id_trans INTEGER IDENTITY(1000,1) NOT NULL PRIMARY KEY ,
     nombre VARCHAR (80) NOT NULL ,
     CIF VARCHAR (10) NOT NULL ,
     modelo VARCHAR (80) NOT NULL ,
     direccion_ppd_id_direccion INTEGER NOT NULL
    );
GO



ALTER TABLE Mgmt.calendario_eventos_ppd
    ADD CONSTRAINT calendario_eventos_ppd_contenedor_ppd_FK FOREIGN KEY
    (
     contenedor_ppd_id_contenedor
    )
    REFERENCES Mgmt.contenedor_ppd
    (
     id_contenedor
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Mgmt.cliente_ppd
    ADD CONSTRAINT cliente_ppd_direccion_ppd_FK FOREIGN KEY
    (
     direccion_ppd_id_direccion
    )
    REFERENCES Mgmt.direccion_ppd
    (
     id_direccion
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Mgmt.concepto_presupuesto_ppd
    ADD CONSTRAINT concepto_presupuesto_ppd_presupuesto_ppd_FK FOREIGN KEY
    (
     presupuesto_ppd_id_presupuesto
    )
    REFERENCES Mgmt.presupuesto_ppd
    (
     id_presupuesto
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE contactos_cliente
    ADD CONSTRAINT contactos_cliente_cliente_ppd_FK FOREIGN KEY
    (
     cliente_ppd_id_cliente
    )
    REFERENCES Mgmt.cliente_ppd
    (
     id_cliente
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE contactos_cliente
    ADD CONSTRAINT contactos_cliente_contacto_ppd_FK FOREIGN KEY
    (
     contacto_ppd_id_contacto
    )
    REFERENCES Mgmt.contacto_ppd
    (
     id_contacto
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE contactos_navieras
    ADD CONSTRAINT contactos_navieras_contacto_ppd_FK FOREIGN KEY
    (
     id_contacto
    )
    REFERENCES Mgmt.contacto_ppd
    (
     id_contacto
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE contactos_navieras
    ADD CONSTRAINT contactos_navieras_naviera_ppd_FK FOREIGN KEY
    (
     id_naviera
    )
    REFERENCES Import.naviera_ppd
    (
     id_naviera
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Mgmt.contenedor_ppd
    ADD CONSTRAINT contenedor_ppd_estado_cont_ppd_FK FOREIGN KEY
    (
     estado_cont_ppd_id_estado
    )
    REFERENCES Mgmt.estado_cont_ppd
    (
     id_estado
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Mgmt.contenedor_ppd
    ADD CONSTRAINT contenedor_ppd_modelo_cont_ppd_FK FOREIGN KEY
    (
     modelo_cont_ppd_id_modelo
    )
    REFERENCES modelo_cont_ppd
    (
     id_modelo
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Mgmt.empleado_ppd
    ADD CONSTRAINT empleado_ppd_oficina_ppd_FK FOREIGN KEY
    (
     oficina_ppd_id_oficina
    )
    REFERENCES Import.oficina_ppd
    (
     id_oficina
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Mgmt.factura_ppd
    ADD CONSTRAINT factura_ppd_presupuesto_ppd_FK FOREIGN KEY
    (
     presupuesto_ppd_id_presupuesto
    )
    REFERENCES Mgmt.presupuesto_ppd
    (
     id_presupuesto
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Sales.medio_transporte_ppd
    ADD CONSTRAINT medio_transporte_ppd_modelo_cont_ppd_FK FOREIGN KEY
    (
     modelo_cont_ppd_id_modelo
    )
    REFERENCES modelo_cont_ppd
    (
     id_modelo
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Sales.medio_transporte_ppd
    ADD CONSTRAINT medio_transporte_ppd_tarifa_ppd_FK FOREIGN KEY
    (
     tarifa_ppd_id_tarifa
    )
    REFERENCES Sales.tarifa_ppd
    (
     id_tarifa
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Sales.medio_transporte_ppd
    ADD CONSTRAINT medio_transporte_ppd_transportista_ppd_FK FOREIGN KEY
    (
     transportista_ppd_id_trans
    )
    REFERENCES Sales.transportista_ppd
    (
     id_trans
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE modelo_cont_ppd
    ADD CONSTRAINT modelo_cont_ppd_dimension_ppd_FK FOREIGN KEY
    (
     dimension_ppd_id_dimension2
    )
    REFERENCES Mgmt.dimension_ppd
    (
     id_dimension
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE modelo_cont_ppd
    ADD CONSTRAINT modelo_cont_ppd_dimension_ppd_FKv1 FOREIGN KEY
    (
     dimension_ppd_id_dimension
    )
    REFERENCES Mgmt.dimension_ppd
    (
     id_dimension
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE modelo_cont_ppd
    ADD CONSTRAINT modelo_cont_ppd_dimension_ppd_FKv2 FOREIGN KEY
    (
     dimension_ppd_id_dimension3
    )
    REFERENCES Mgmt.dimension_ppd
    (
     id_dimension
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Import.naviera_ppd
    ADD CONSTRAINT naviera_ppd_direccion_ppd_FK FOREIGN KEY
    (
     direccion_ppd_id_direccion
    )
    REFERENCES Mgmt.direccion_ppd
    (
     id_direccion
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Import.naviera_ppd
    ADD CONSTRAINT naviera_ppd_puerto_ppd_FK FOREIGN KEY
    (
     puerto_ppd_id_puerto
    )
    REFERENCES Import.puerto_ppd
    (
     id_puerto
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Import.oficina_ppd
    ADD CONSTRAINT oficina_ppd_direccion_ppd_FK FOREIGN KEY
    (
     direccion_ppd_id_direccion
    )
    REFERENCES Mgmt.direccion_ppd
    (
     id_direccion
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Import.oficina_ppd
    ADD CONSTRAINT oficina_ppd_empleado_ppd_FK FOREIGN KEY
    (
     empleado_ppd_id_empleado
    )
    REFERENCES Mgmt.empleado_ppd
    (
     id_empleado
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Sales.orden_trabajo_ppd
    ADD CONSTRAINT orden_trabajo_ppd_medio_transporte_ppd_FK FOREIGN KEY
    (
     medio_transporte_ppd_id_mediot
    )
    REFERENCES Sales.medio_transporte_ppd
    (
     id_mediot
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Mgmt.presupuesto_ppd
    ADD CONSTRAINT presupuesto_ppd_cliente_ppd_FK FOREIGN KEY
    (
     cliente_ppd_id_cliente
    )
    REFERENCES Mgmt.cliente_ppd
    (
     id_cliente
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Import.puerto_ppd
    ADD CONSTRAINT puerto_ppd_direccion_ppd_FK FOREIGN KEY
    (
     direccion_ppd_id_direccion
    )
    REFERENCES Mgmt.direccion_ppd
    (
     id_direccion
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Mgmt.stock_ppd
    ADD CONSTRAINT stock_ppd_modelo_cont_ppd_FK FOREIGN KEY
    (
     modelo_cont_ppd_id_modelo
    )
    REFERENCES modelo_cont_ppd
    (
     id_modelo
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO

ALTER TABLE Sales.transportista_ppd
    ADD CONSTRAINT transportista_ppd_direccion_ppd_FK FOREIGN KEY
    (
     direccion_ppd_id_direccion
    )
    REFERENCES Mgmt.direccion_ppd
    (
     id_direccion
    )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION ;
GO



-- Oracle SQL Developer Data Modeler Summary Report:
--
-- CREATE TABLE                            22
-- CREATE INDEX                            20
-- ALTER TABLE                             48
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE DATABASE                          0
-- CREATE DEFAULT                           0
-- CREATE INDEX ON VIEW                     0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE ROLE                              0
-- CREATE RULE                              0
-- CREATE SCHEMA                            0
-- CREATE SEQUENCE                          0
-- CREATE PARTITION FUNCTION                0
-- CREATE PARTITION SCHEME                  0
--
-- DROP DATABASE                            0
--
-- ERRORS                                   0
-- WARNINGS                                 0
